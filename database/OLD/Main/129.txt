%%tabbedAccordion

! Linux
%%collapse
* 相关知识总结
** [Debian 知识总结|FamgyDebian]
** [Ubuntu 知识总结|FamgyUbuntu]
** [Linux 知识总结|FamgyLinux]
** [Mount 知识总结|FamgyMount]
** [Git 知识总结|FamgyGit]
** [mariadb 知识总结|FamgyMariadb]
** [systemd 知识总结|http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html]
** Web 知识总结
*** [Nginx 相关|FamgyNginx]
*** [Tomcat 相关|FamgyTomcat]

* 问题解决总结
** [系统配置问题|QaLinuxCfg]

* linux小工具
** ncat 
### ncat -l 8888
### ncat 192.168.220.150 8888
** s-nail
### echo "hahaha" | s-nail -v -r "97684695@qq.com" -s "xxx" -S smtp="smtp.qq.com:25" -S smtp-use-starttls -S smtp-auth=login -S smtp-auth-user="97684695" -S smtp-auth-password='xxxxxxxx' -S ssl-verify=ignore 97684695@qq.com

/%

! Android
%%collapse
* 相关知识总结
** [Android 基础控件总结|FamgyControls]
** [Android 开发技巧总结|FamgyAndroid]
** [shell命令总结|AndroidShell]
* 开发环境
** [Nexus5环境准备|Nexus5Config]
** [HTCOneS环境准备|HTCOneSConfig]
/%

%%collapse
* 开发工具
** Andriod Stuidio
*** 快捷键
#### 格式化自动对齐代码： ctl + alt + shift + L 
** [gradle|https://www.jianshu.com/p/8b8a550246bd]
/%

%%collapse
* 工程项目有
** sdk
*** [arr|https://jingyan.baidu.com/article/2a13832890d08f074a134ff0.html]
** 获取应用sha1
*** keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey
*** 默认密码：android
/%

%%collapse
* 逆向知识总结
** [Smali逆向调试|FamgySmali]
** jeb
/%

%%collapse
* hook相关总结
** hook框架
*** xposed
*** substrate
*** [frida|FamgyFrida]

/%

%%collapse
* 好用的apk应用
** [Droid Info|https://droid-info.en.uptodown.com/android]
/%

%%collapse
* android系统应用
** [Google Apps(GAPPS)官网|http://opengapps.org/#downloadsection]
*** [Google Apps(GAPPS)文档|https://github.com/opengapps/opengapps/wiki]
*** [GAPPS下载app|http://opengapps.org/app/]
** [lineageos官网|https://www.lineageos.org/]
***[lineageos文档|https://wiki.lineageos.org/]
***[lineageos开源|https://github.com/LineageOS]
***[源码编译|https://wiki.lineageos.org/devices/m8/build]
***[https://github.com/LineageOS/android]
***[导入源码到android studio|https://wiki.lineageos.org/import-android-studio-howto.html]
/%

! Java
* [Java官方文档(api)|https://docs.oracle.com/javase/8/docs/api]
%%collapse
* 相关知识总结
** 数据结构总结
*** [堆栈(Stack)|JavaStack]
*** [迭代器(Iterator)|JavaIterator]
*** [动态数组(ArrayList)|http://www.cnblogs.com/skywang12345/p/3308556.html]
** 多线程技巧总结
*** [实现多线程同步线性处理|JavaSynchronized]
*** [线程池|https://www.jianshu.com/p/50fffbf21b39]
#### 默认实现类：ThreadPoolExecutor -> AbstractExecutorService -> ExecutorService -> Executor
#### 常用实现类：Executors（newFixedThreadPool, newCachedThreadPool, newScheduledThreadPool , newSingleThreadExecutor ） -> ThreadPoolExecutor
#### android中的应用：Okhttp
#### [明白Java线程池|https://www.jianshu.com/p/50fffbf21b39]
** [maven|http://maven.apache.org/plugins/index.html]
*** [Idea基于maven，java语言的spark环境搭建|https://blog.csdn.net/huanbia/article/details/69084895]
** [mariadb|https://mariadb.com/kb/en/library/getting-started-with-the-java-connector/]
** [gradle|https://docs.gradle.org/current/userguide/userguide.html]
** [Okhttp|http://square.github.io/okhttp/#examples]
** [gson|http://sites.google.com/site/gson/]
** [htmlunit|http://htmlunit.sourceforge.net/dependency-info.html]
** [jsoup|https://jsoup.org/]
** 实现模式总结
*** [观察者模式|https://www.cnblogs.com/luohanguo/p/7825656.html]
/%

! Python
* Python官方文档(api)

* hook框架 frida ([官方文档|https://www.frida.re./docs/installation/])
## pip install frida
## vim example.py
## 两个终端：1.shell 执行cat命令 阻塞 提供 被 注入; 2. 执行 python example.py
{{{
import frida

session = frida . attach ( "cat" ) 
for x in session.enumerate_modules():
    print(x)

}}}

! Mariadb
* SHOW DATABASES;      可以显示所有的数据库
* SHOW TABLES;         将会显示所有的数据表
* SELECT User, Host, Password FROM mysql.user;     查询用户信息
* INSERT INTO cbg_equip (equip_name, game_ordersn, server_id) VALUE ('北冥龙军', 'ssppppp', 128);
----
* drop database if exists pwblog;
* create database pwblog character set utf8;
* use pwblog;
* grant select, insert, update, delete on pwblog.* to 'gpf'@'localhost' identified by 'abcd';

----

* mysql -u root -p < schema.sql;

----
{{{
create table user (
    `id` varchar(50) not null primary key,
    `email` varchar(50) not null,
    `password` varchar(50) not null,
    `admin` bool not null,
    `name` varchar(50) not null,
    `image` varchar(500) not null,
    `created_at` real not null,
    unique key `idx_email` (`email`),
    key `idx_created_at` (`created_at`)
) engine=innodb default charset=utf8;
}}}

{{{
create table cbg_equip (
   `id` int(11) not null auto_increment,
   `equip_name` varchar(50) not null, `game_ordersn` varchar(50) not null, 
   `server_id` int(11) not null,
    primary key (id)
) engine=InnoDb  default charset=utf8;
}}}

{{{
一、导出数据库用mysqldump命令
（注意:先cd到mysql的运行路径下，再执行一下命令）：
1、导出数据和表结构：
mysqldump -u用户名 -p密码 数据库名 > 数据库名.sql
mysqldump -uroot -p dbname > dbname .sql
敲回车后会提示输入密码
2、只导出表结构
mysqldump -u用户名 -p密码 -d 数据库名 > 数据库名.sql
mysqldump -uroot -p -d dbname > dbname .sql

二、导入数据库
1、首先建空数据库
mysql>create database dbname ;
2、导入数据库
方法一：
（1）选择数据库
mysql>use dbname ;
（2）设置数据库编码
mysql>set names utf8;
（3）导入数据（注意sql文件的路径）
mysql>source /home/xxxx/dbname .sql;
方法二：
mysql -u用户名 -p密码 数据库名 < 数据库名.sql

tools : mysql-workbench

}}}

! VPN
#IPsec作为一个协议族 = 加密分组流的封装安全载荷（ESP） + 认证头（AH） + 密钥交换协议ike（ikev2），典型的OpenSWan，是Linux下IPsec的最佳实现方式，其功能强大，最大程度地保证了数据传输中的安全性、完整性问题。
#PPTP: Point to Point Tunneling Protocol --点到点隧道协议  = 密码验证协议（PAP） + 可扩展认证协议（EAP） | 可以选用MPPE、RSARC4或者DES等算法对数据报进行加密。
#L2TP : 第 2 层隧道协议 (L2TP) 是IETF基于L2F （Cisco的第二层转发协议）开发的 PPTP 的后续版本
#SSL VPN  SSL协议提供了数据私密性、端点验证、信息完整性等特性。典型的是OpenVPN， 允许参与建立VPN的单点使用预设的私钥，第三方证书，或者用户名/密码来进行身份验证。
* [熟悉vpn的几种协议|https://blog.csdn.net/kim_weir/article/details/79674732]
* [Android VPN介绍|http://www.voidcn.com/article/p-klafrlxp-tp.html]
* [NetGuard|https://github.com/M66B/NetGuard]

! 杂项
* 获取每天更新的bing图
;:http://guolin.tech/api/bing_pic

* [图像SVG应用|https://www.jianshu.com/p/0555b8c1d26a]

/%
